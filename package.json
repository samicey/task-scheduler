{
  "author": "samuel",
  "dependencies": {
    "@aws-sdk/client-sqs": "^3.614.0",
    "aws-sdk": "2.1225.0",
    "cors": "2.8.5",
    "dotenv": "16.0.3",
    "express": "4.18.2",
    "joi": "^17.13.3",
    "moment": "2.29.4",
    "pg": "^8.12.0",
    "request": "2.88.2",
    "sequelize": "^6.37.3",
    "serverless-http": "3.0.1",
    "ts-node": "10.9.1",
    "webpack": "^5.92.1"
  },
  "description": "Scheduler",
  "devDependencies": {
    "@swc/jest": "0.2.23",
    "@types/aws-lambda": "8.10.108",
    "@types/body-parser": "1.19.2",
    "@types/cors": "2.8.12",
    "@types/dotenv": "8.2.0",
    "@types/express": "4.17.14",
    "@types/jest": "27.5.2",
    "@types/supertest": "2.0.12",
    "fork-ts-checker-webpack-plugin": "7.2.13",
    "jest": "28.1.3",
    "jest-junit": "13.2.0",
    "jest-watch-typeahead": "2.2.0",
    "nodemon": "2.0.20",
    "prettier": "2.7.1",
    "serverless": "3.25.1",
    "serverless-associate-waf": "1.2.1",
    "serverless-lift": "1.20.2",
    "serverless-offline": "11.3.0",
    "serverless-prune-plugin": "2.0.1",
    "serverless-s3-local": "0.6.22",
    "serverless-webpack": "5.11.0",
    "supertest": "6.3.2",
    "ts-jest": "28.0.8",
    "ts-loader": "9.4.1",
    "typescript": "4.7.4",
    "webpack-node-externals": "3.0.0"
  },
  "license": "UNLICENSED",
  "main": ".build/index.js",
  "name": "aws-task-scheduler",
  "private": true,
  "scripts": {
    "build": "tsc --watch false",
    "db:docker": "echo 'Starting DB' && docker rm -fv schedule_db && docker run --rm --name schedule_db -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=scheduleDB -e POSTGRES_USER=postgres -p 5432:5432 -d postgres:12.12-alpine",
    "start": "npx serverless offline --stage local --noPrependStageInUrl",
    "migrate-db-local": "NODE_ENV=local npx sequelize-cli db:migrate",
    "generate-db-local": "npx sequelize-cli migration:generate --env=local --migrations-path=src/config/migrations --models-path=src/models/schedule.model.js",
    "predeploy": "yarn migrate-db-local && yarn build",
    "deploy": "yarn serverless deploy --force --stage $DEPLOY_ENV --verbose"
  },
  "version": "2.4.1"
}
